 
# Parameters
nc: 17  # number of classes
 
depth_multiple: 0.67  # model depth multiple
width_multiple: 0.75  # layer channel multiple
 
anchors:
  - [ 10,13, 16,30, 33,23 ]  # P3/8
  - [ 30,61, 62,45, 59,119 ]  # P4/16
  - [ 116,90, 156,198, 373,326 ]  # P5/32
 
# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [ [ -1, 1, Conv, [ 32, 3, 2 ] ],  # 0-P1/2 32x320x320
    [ -1, 1, InvertedResidual, [ 16, 1, 1 ] ],  # 1        16x320x320
    [ -1, 1, InvertedResidual, [ 24, 2, 6 ] ],  # 2-P2/4   24x160x160
    [ -1, 1, InvertedResidual, [ 24, 1, 6 ] ],  # 3-P2/4   24x160x160
    [ -1, 1, InvertedResidual, [ 32, 2, 6 ] ],  # 4-P3/8   32x80x80
    [ -1, 1, InvertedResidual, [ 32, 1, 6 ] ],  ##5-P3/8   32x80x80
    [ -1, 1, InvertedResidual, [ 64, 2, 6 ] ],  # 6-P4/16  64x40x40
    [ -1, 1, InvertedResidual, [ 64, 1, 6 ] ],  # 7-P4/16  64x40x40
    [ -1, 1, InvertedResidual, [ 64, 1, 6 ] ],  ##8-P4/16  64x40x40
    [ -1, 1, InvertedResidual, [ 96, 1, 6 ] ],  # 9       96X40X40
    [ -1, 1, InvertedResidual, [ 96, 1, 6 ] ],  ##10       96X40X40
    [ -1, 1, InvertedResidual, [ 160, 2, 6 ] ], # 11-P5/32  160X20X20
    [ -1, 1, InvertedResidual, [ 160, 1, 6 ] ], # 12-P5/32  160X20X20
    [ -1, 1, InvertedResidual, [ 320, 1, 6 ] ],  # 13       320X20X20
  ]
 
# YOLOv5 v6.0 head
head:
  [ [ -1, 1, Conv, [ 160, 1, 1 ] ], #14
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], 
    [ [ -1, 10 ], 1, Concat, [ 1 ] ],  # cat backbone P4
    [ -1, 1, C3, [ 160, False ] ],  # 17
 
    [ -1, 1, Conv, [ 80, 1, 1 ] ],
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],
    [ [ -1, 5 ], 1, Concat, [ 1 ] ],  # cat backbone P3
    [ -1, 1, C3, [ 80, False ] ],  # 21 (P3/8-small)
 
    [ -1, 1, Conv, [ 80, 3, 2 ] ],
    [ [ -1, 18 ], 1, Concat, [ 1 ] ],  # cat head P4
    [ -1, 1, C3, [ 160, False ] ],  # 24 (P4/16-medium)
 
    [ -1, 1, Conv, [ 160, 3, 2 ] ],
    [ [ -1, 14 ], 1, Concat, [ 1 ] ],  # cat head P5
    [ -1, 1, C3, [ 320, False ] ],  # 27 (P5/32-large)
 
    [ [ 21, 24, 27 ], 1, Detect, [ nc, anchors ] ],  # Detect(P3, P4, P5)
  ]